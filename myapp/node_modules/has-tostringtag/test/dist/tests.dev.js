'use strict'; // eslint-disable-next-line consistent-return

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

module.exports = function runSymbolTests(t) {
  t.equal(typeof Symbol === "undefined" ? "undefined" : _typeof(Symbol), 'function', 'global Symbol is a function');
  t.ok(Symbol.toStringTag, 'Symbol.toStringTag exists');

  if (typeof Symbol !== 'function' || !Symbol.toStringTag) {
    return false;
  }

  var obj = {};
  obj[Symbol.toStringTag] = 'test';
  t.equal(Object.prototype.toString.call(obj), '[object test]');
};
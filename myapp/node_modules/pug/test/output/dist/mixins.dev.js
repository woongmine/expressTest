"use strict";

function pug_escape(e) {
  var a = "" + e,
      t = pug_match_html.exec(a);
  if (!t) return e;
  var r,
      c,
      n,
      s = "";

  for (r = t.index, c = 0; r < a.length; r++) {
    switch (a.charCodeAt(r)) {
      case 34:
        n = "&quot;";
        break;

      case 38:
        n = "&amp;";
        break;

      case 60:
        n = "&lt;";
        break;

      case 62:
        n = "&gt;";
        break;

      default:
        continue;
    }

    c !== r && (s += a.substring(c, r)), c = r + 1, s += n;
  }

  return c !== r ? s + a.substring(c, r) : s;
}

var pug_match_html = /["&<>]/;

function template(locals) {
  var pug_html = "",
      pug_mixins = {},
      _pug_interp3;

  pug_mixins["comment"] = _pug_interp3 = function pug_interp(title, str) {
    var block = this && this.block,
        attributes = this && this.attributes || {};
    pug_html = pug_html + '<div class="comment"><h2>' + pug_escape(null == (_pug_interp3 = title) ? "" : _pug_interp3) + '</h2><p class="body">' + pug_escape(null == (_pug_interp3 = str) ? "" : _pug_interp3) + "</p></div>";
  };

  pug_mixins["comment"] = _pug_interp3 = function _pug_interp(title, str) {
    var block = this && this.block,
        attributes = this && this.attributes || {};
    pug_html = pug_html + '<div class="comment"><h2>' + pug_escape(null == (_pug_interp3 = title) ? "" : _pug_interp3) + '</h2><p class="body">' + pug_escape(null == (_pug_interp3 = str) ? "" : _pug_interp3) + "</p></div>";
  };

  pug_html = pug_html + '<div id="user"><h1>Tobi</h1><div class="comments">';
  pug_mixins["comment"]("This", "is regular, javascript");
  pug_html = pug_html + "</div></div>";

  pug_mixins["list"] = _pug_interp3 = function _pug_interp2() {
    var block = this && this.block,
        attributes = this && this.attributes || {};
    pug_html = pug_html + "<ul><li>foo</li><li>bar</li><li>baz</li></ul>";
  };

  pug_html = pug_html + "<body>";
  pug_mixins["list"]();
  pug_mixins["list"]();
  pug_html = pug_html + "</body>";

  pug_mixins["foobar"] = _pug_interp3 = function _pug_interp2(str) {
    var block = this && this.block,
        attributes = this && this.attributes || {};
    pug_html = pug_html + '<div id="interpolation">' + pug_escape(null == (_pug_interp3 = str + "interpolated") ? "" : _pug_interp3) + "</div>";
  };

  var suffix = "bar";
  pug_mixins["foo" + suffix]("This is ");
  return pug_html;
}